"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const authController_1 = require("@/controller/implements/user/authController");
const rateLimiter_1 = require("@/config/rateLimiter");
const authRoute = (0, express_1.Router)();
const signInLimiter = (0, rateLimiter_1.apiLimiter)(10 * 60 * 1000, 10);
const signupLimiter = (0, rateLimiter_1.apiLimiter)(10 * 60 * 1000, 10);
authRoute.post("/signup", signupLimiter, authController_1.authController.Signup.bind(authController_1.authController));
authRoute.post("/register", authController_1.authController.register.bind(authController_1.authController));
authRoute.post("/otpverify", authController_1.authController.verifyOTP.bind(authController_1.authController));
authRoute.post("/signin", signInLimiter, authController_1.authController.signIn.bind(authController_1.authController));
authRoute.post("/auth/google", authController_1.authController.googleAuth.bind(authController_1.authController));
authRoute.post("/forget/password", authController_1.authController.forgetPassword.bind(authController_1.authController));
authRoute.post("/reset/otp", authController_1.authController.resetOTP.bind(authController_1.authController));
authRoute.post("/reset/password", authController_1.authController.resetPassword.bind(authController_1.authController));
authRoute.post("/logout", authController_1.authController.logoutUser.bind(authController_1.authController));
authRoute.get('/refresh-token', authController_1.authController.setNewToken.bind(authController_1.authController));
exports.default = authRoute;
